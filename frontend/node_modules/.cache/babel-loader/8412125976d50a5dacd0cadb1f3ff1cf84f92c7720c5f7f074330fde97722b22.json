{"ast":null,"code":"// https://github.com/d3/d3-contour/blob/master/src/contains.js\nexport default function (ring, hole) {\n  const n = hole.length;\n  let i = -1;\n  while (++i < n) {\n    const c = ringContains(ring, hole[i]);\n    if (c) return c;\n  }\n  return 0;\n}\nfunction ringContains(ring, point) {\n  let x = point[0],\n    y = point[1],\n    contains = -1;\n  for (let i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    const pi = ring[i],\n      xi = pi[0],\n      yi = pi[1],\n      pj = ring[j],\n      xj = pj[0],\n      yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = -contains;\n  }\n  return contains;\n}\nfunction segmentContains(a, b, c) {\n  let i;\n  return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}","map":{"version":3,"names":["ring","hole","n","length","i","c","ringContains","point","x","y","contains","j","pi","xi","yi","pj","xj","yj","segmentContains","a","b","collinear","within","p","q","r"],"sources":["/home/david/Documents/projects/works/sass/backend api key/frontend/node_modules/.pnpm/d3-tricontour@1.1.0/node_modules/d3-tricontour/src/contains.js"],"sourcesContent":["// https://github.com/d3/d3-contour/blob/master/src/contains.js\nexport default function(ring, hole) {\n  const n = hole.length;\n  let i = -1;\n  while (++i < n) {\n    const c = ringContains(ring, hole[i]);\n    if (c) return c;\n  }\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  let x = point[0], y = point[1], contains = -1;\n  for (let i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    const pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  let i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n"],"mappings":"AAAA;AACA,eAAe,UAASA,IAAI,EAAEC,IAAI,EAAE;EAClC,MAAMC,CAAC,GAAGD,IAAI,CAACE,MAAM;EACrB,IAAIC,CAAC,GAAG,CAAC,CAAC;EACV,OAAO,EAAEA,CAAC,GAAGF,CAAC,EAAE;IACd,MAAMG,CAAC,GAAGC,YAAY,CAACN,IAAI,EAAEC,IAAI,CAACG,CAAC,CAAC,CAAC;IACrC,IAAIC,CAAC,EAAE,OAAOA,CAAC;EACjB;EACA,OAAO,CAAC;AACV;AAEA,SAASC,YAAYA,CAACN,IAAI,EAAEO,KAAK,EAAE;EACjC,IAAIC,CAAC,GAAGD,KAAK,CAAC,CAAC,CAAC;IAAEE,CAAC,GAAGF,KAAK,CAAC,CAAC,CAAC;IAAEG,QAAQ,GAAG,CAAC,CAAC;EAC7C,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEF,CAAC,GAAGF,IAAI,CAACG,MAAM,EAAEQ,CAAC,GAAGT,CAAC,GAAG,CAAC,EAAEE,CAAC,GAAGF,CAAC,EAAES,CAAC,GAAGP,CAAC,EAAE,EAAE;IAC1D,MAAMQ,EAAE,GAAGZ,IAAI,CAACI,CAAC,CAAC;MAAES,EAAE,GAAGD,EAAE,CAAC,CAAC,CAAC;MAAEE,EAAE,GAAGF,EAAE,CAAC,CAAC,CAAC;MAAEG,EAAE,GAAGf,IAAI,CAACW,CAAC,CAAC;MAAEK,EAAE,GAAGD,EAAE,CAAC,CAAC,CAAC;MAAEE,EAAE,GAAGF,EAAE,CAAC,CAAC,CAAC;IAChF,IAAIG,eAAe,CAACN,EAAE,EAAEG,EAAE,EAAER,KAAK,CAAC,EAAE,OAAO,CAAC;IAC5C,IAAMO,EAAE,GAAGL,CAAC,KAAOQ,EAAE,GAAGR,CAAE,IAAOD,CAAC,GAAG,CAACQ,EAAE,GAAGH,EAAE,KAAKJ,CAAC,GAAGK,EAAE,CAAC,IAAIG,EAAE,GAAGH,EAAE,CAAC,GAAGD,EAAI,EAAEH,QAAQ,GAAG,CAACA,QAAQ;EACpG;EACA,OAAOA,QAAQ;AACjB;AAEA,SAASQ,eAAeA,CAACC,CAAC,EAAEC,CAAC,EAAEf,CAAC,EAAE;EAChC,IAAID,CAAC;EAAE,OAAOiB,SAAS,CAACF,CAAC,EAAEC,CAAC,EAAEf,CAAC,CAAC,IAAIiB,MAAM,CAACH,CAAC,CAACf,CAAC,GAAG,EAAEe,CAAC,CAAC,CAAC,CAAC,KAAKC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEf,CAAC,CAACD,CAAC,CAAC,EAAEgB,CAAC,CAAChB,CAAC,CAAC,CAAC;AACjF;AAEA,SAASiB,SAASA,CAACF,CAAC,EAAEC,CAAC,EAAEf,CAAC,EAAE;EAC1B,OAAO,CAACe,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,KAAKd,CAAC,CAAC,CAAC,CAAC,GAAGc,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAACd,CAAC,CAAC,CAAC,CAAC,GAAGc,CAAC,CAAC,CAAC,CAAC,KAAKC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE;AAEA,SAASG,MAAMA,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;EACvB,OAAOF,CAAC,IAAIC,CAAC,IAAIA,CAAC,IAAIC,CAAC,IAAIA,CAAC,IAAID,CAAC,IAAIA,CAAC,IAAID,CAAC;AAC7C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}