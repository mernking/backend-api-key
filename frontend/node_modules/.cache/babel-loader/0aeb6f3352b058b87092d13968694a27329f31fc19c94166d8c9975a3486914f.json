{"ast":null,"code":"import { LineSegments2 } from './LineSegments2.js';\nimport { LineGeometry } from './LineGeometry.js';\nimport { LineMaterial } from './LineMaterial.js';\n\n/**\n * A polyline drawn between vertices.\n *\n * This adds functionality beyond {@link Line}, like arbitrary line width and changing width to\n * be in world units.It extends {@link LineSegments2}, simplifying constructing segments from a\n * chain of points.\n *\n * This module can only be used with {@link WebGLRenderer}. When using {@link WebGPURenderer},\n * import the class from `lines/webgpu/Line2.js`.\n *\n * ```js\n * const geometry = new LineGeometry();\n * geometry.setPositions( positions );\n * geometry.setColors( colors );\n *\n * const material = new LineMaterial( { linewidth: 5, vertexColors: true } };\n *\n * const line = new Line2( geometry, material );\n * scene.add( line );\n * ```\n *\n * @augments LineSegments2\n * @three_import import { Line2 } from 'three/addons/lines/Line2.js';\n */\nclass Line2 extends LineSegments2 {\n  /**\n   * Constructs a new wide line.\n   *\n   * @param {LineGeometry} [geometry] - The line geometry.\n   * @param {LineMaterial} [material] - The line material.\n   */\n  constructor(geometry = new LineGeometry(), material = new LineMaterial({\n    color: Math.random() * 0xffffff\n  })) {\n    super(geometry, material);\n\n    /**\n     * This flag can be used for type testing.\n     *\n     * @type {boolean}\n     * @readonly\n     * @default true\n     */\n    this.isLine2 = true;\n    this.type = 'Line2';\n  }\n}\nexport { Line2 };","map":{"version":3,"names":["LineSegments2","LineGeometry","LineMaterial","Line2","constructor","geometry","material","color","Math","random","isLine2","type"],"sources":["/home/david/Documents/projects/works/sass/backend api key/frontend/node_modules/.pnpm/three@0.180.0/node_modules/three/examples/jsm/lines/Line2.js"],"sourcesContent":["import { LineSegments2 } from './LineSegments2.js';\nimport { LineGeometry } from './LineGeometry.js';\nimport { LineMaterial } from './LineMaterial.js';\n\n/**\n * A polyline drawn between vertices.\n *\n * This adds functionality beyond {@link Line}, like arbitrary line width and changing width to\n * be in world units.It extends {@link LineSegments2}, simplifying constructing segments from a\n * chain of points.\n *\n * This module can only be used with {@link WebGLRenderer}. When using {@link WebGPURenderer},\n * import the class from `lines/webgpu/Line2.js`.\n *\n * ```js\n * const geometry = new LineGeometry();\n * geometry.setPositions( positions );\n * geometry.setColors( colors );\n *\n * const material = new LineMaterial( { linewidth: 5, vertexColors: true } };\n *\n * const line = new Line2( geometry, material );\n * scene.add( line );\n * ```\n *\n * @augments LineSegments2\n * @three_import import { Line2 } from 'three/addons/lines/Line2.js';\n */\nclass Line2 extends LineSegments2 {\n\n\t/**\n\t * Constructs a new wide line.\n\t *\n\t * @param {LineGeometry} [geometry] - The line geometry.\n\t * @param {LineMaterial} [material] - The line material.\n\t */\n\tconstructor( geometry = new LineGeometry(), material = new LineMaterial( { color: Math.random() * 0xffffff } ) ) {\n\n\t\tsuper( geometry, material );\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isLine2 = true;\n\n\t\tthis.type = 'Line2';\n\n\t}\n\n}\n\nexport { Line2 };\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,YAAY,QAAQ,mBAAmB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,SAASH,aAAa,CAAC;EAEjC;AACD;AACA;AACA;AACA;AACA;EACCI,WAAWA,CAAEC,QAAQ,GAAG,IAAIJ,YAAY,CAAC,CAAC,EAAEK,QAAQ,GAAG,IAAIJ,YAAY,CAAE;IAAEK,KAAK,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG;EAAS,CAAE,CAAC,EAAG;IAEhH,KAAK,CAAEJ,QAAQ,EAAEC,QAAS,CAAC;;IAE3B;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACI,OAAO,GAAG,IAAI;IAEnB,IAAI,CAACC,IAAI,GAAG,OAAO;EAEpB;AAED;AAEA,SAASR,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}