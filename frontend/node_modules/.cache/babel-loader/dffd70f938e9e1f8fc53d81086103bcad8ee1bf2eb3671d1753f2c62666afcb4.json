{"ast":null,"code":"var _jsxFileName = \"/home/david/Documents/projects/works/sass/backend api key/frontend/src/components/GlobeComponent.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport ThreeGlobe from \"three-globe\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GlobeComponent({\n  logs\n}) {\n  _s();\n  const globeEl = useRef(null);\n  useEffect(() => {\n    // üåç Initialize the globe\n    const myGlobe = new ThreeGlobe().globeImageUrl(\"//unpkg.com/three-globe/example/img/earth-night.jpg\").pointAltitude(0.005).pointsData(logs.map(log => ({\n      lat: getApproximateCoords(log.country, log.city).lat,\n      lng: getApproximateCoords(log.country, log.city).lng,\n      size: 0.1,\n      // Set a consistent size for all points\n      color: \"red\" // All points are red for visibility\n    })));\n\n    // üí° Setup the Three.js scene\n    const myScene = new THREE.Scene();\n    myScene.add(myGlobe);\n    myScene.add(new THREE.AmbientLight(0xcccccc, 1));\n    myScene.add(new THREE.DirectionalLight(0xffffff, 0.6));\n\n    // üñºÔ∏è Setup the renderer\n    const width = 800;\n    const height = 600;\n    const myRenderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    myRenderer.setSize(width, height);\n    myRenderer.domElement.style.border = \"2px solid #333\";\n    myRenderer.domElement.style.borderRadius = \"10px\";\n    myRenderer.domElement.style.boxShadow = \"0 4px 8px rgba(0,0,0,0.1)\";\n\n    // üì∑ Setup the camera\n    const myCamera = new THREE.PerspectiveCamera();\n    myCamera.aspect = width / height;\n    myCamera.updateProjectionMatrix();\n    myCamera.position.z = 250;\n\n    // üïπÔ∏è Setup controls\n    const myControls = new OrbitControls(myCamera, myRenderer.domElement);\n    myControls.enableDamping = true;\n    myControls.dampingFactor = 0.25;\n    myControls.screenSpacePanning = false;\n    myControls.minDistance = 150;\n    myControls.maxDistance = 500;\n\n    // üöÄ Start animation loop\n    (function animate() {\n      myControls.update();\n      myRenderer.render(myScene, myCamera);\n      requestAnimationFrame(animate);\n    })();\n\n    // üåê Append the renderer's canvas to the ref\n    globeEl.current.appendChild(myRenderer.domElement);\n\n    // üßπ Cleanup on component unmount\n    return () => {\n      myRenderer.domElement.remove();\n      myRenderer.dispose();\n      myControls.dispose();\n    };\n  }, [logs]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: globeEl\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 10\n  }, this);\n}\n\n// üåç Helper: Approximate coordinates for countries\n_s(GlobeComponent, \"EFxWCNvYXoXG6t8JTJFN0+m3ZSM=\");\n_c = GlobeComponent;\nfunction getApproximateCoords(country, city) {\n  const coords = {\n    Nigeria: {\n      lat: 9.082,\n      lng: 8.6753\n    },\n    \"United States\": {\n      lat: 37.0902,\n      lng: -95.7129\n    },\n    \"United Kingdom\": {\n      lat: 55.3781,\n      lng: -3.436\n    },\n    Germany: {\n      lat: 51.1657,\n      lng: 10.4515\n    },\n    France: {\n      lat: 46.2276,\n      lng: 2.2137\n    },\n    Japan: {\n      lat: 36.2048,\n      lng: 138.2529\n    },\n    Australia: {\n      lat: -25.2744,\n      lng: 133.7751\n    },\n    Canada: {\n      lat: 56.1304,\n      lng: -106.3468\n    },\n    Brazil: {\n      lat: -14.235,\n      lng: -51.9253\n    },\n    India: {\n      lat: 20.5937,\n      lng: 78.9629\n    },\n    China: {\n      lat: 35.8617,\n      lng: 104.1954\n    },\n    Russia: {\n      lat: 61.524,\n      lng: 105.3188\n    },\n    \"South Africa\": {\n      lat: -30.5595,\n      lng: 22.9375\n    },\n    Mexico: {\n      lat: 23.6345,\n      lng: -102.5528\n    },\n    Argentina: {\n      lat: -38.4161,\n      lng: -63.6167\n    }\n  };\n  return coords[country] || {\n    lat: Math.random() * 180 - 90,\n    lng: Math.random() * 360 - 180\n  };\n}\nexport default GlobeComponent;\nvar _c;\n$RefreshReg$(_c, \"GlobeComponent\");","map":{"version":3,"names":["useEffect","useRef","ThreeGlobe","THREE","OrbitControls","jsxDEV","_jsxDEV","GlobeComponent","logs","_s","globeEl","myGlobe","globeImageUrl","pointAltitude","pointsData","map","log","lat","getApproximateCoords","country","city","lng","size","color","myScene","Scene","add","AmbientLight","DirectionalLight","width","height","myRenderer","WebGLRenderer","antialias","setSize","domElement","style","border","borderRadius","boxShadow","myCamera","PerspectiveCamera","aspect","updateProjectionMatrix","position","z","myControls","enableDamping","dampingFactor","screenSpacePanning","minDistance","maxDistance","animate","update","render","requestAnimationFrame","current","appendChild","remove","dispose","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","coords","Nigeria","Germany","France","Japan","Australia","Canada","Brazil","India","China","Russia","Mexico","Argentina","Math","random","$RefreshReg$"],"sources":["/home/david/Documents/projects/works/sass/backend api key/frontend/src/components/GlobeComponent.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\nimport ThreeGlobe from \"three-globe\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\n\nfunction GlobeComponent({ logs }) {\n  const globeEl = useRef(null);\n\n  useEffect(() => {\n    // üåç Initialize the globe\n    const myGlobe = new ThreeGlobe()\n      .globeImageUrl(\"//unpkg.com/three-globe/example/img/earth-night.jpg\")\n      .pointAltitude(0.005)\n      .pointsData(\n        logs.map((log) => ({\n          lat: getApproximateCoords(log.country, log.city).lat,\n          lng: getApproximateCoords(log.country, log.city).lng,\n          size: 0.1, // Set a consistent size for all points\n          color: \"red\", // All points are red for visibility\n        }))\n      );\n\n    // üí° Setup the Three.js scene\n    const myScene = new THREE.Scene();\n    myScene.add(myGlobe);\n    myScene.add(new THREE.AmbientLight(0xcccccc, 1));\n    myScene.add(new THREE.DirectionalLight(0xffffff, 0.6));\n\n    // üñºÔ∏è Setup the renderer\n    const width = 800;\n    const height = 600;\n    const myRenderer = new THREE.WebGLRenderer({ antialias: true });\n    myRenderer.setSize(width, height);\n    myRenderer.domElement.style.border = \"2px solid #333\";\n    myRenderer.domElement.style.borderRadius = \"10px\";\n    myRenderer.domElement.style.boxShadow = \"0 4px 8px rgba(0,0,0,0.1)\";\n\n    // üì∑ Setup the camera\n    const myCamera = new THREE.PerspectiveCamera();\n    myCamera.aspect = width / height;\n    myCamera.updateProjectionMatrix();\n    myCamera.position.z = 250;\n\n    // üïπÔ∏è Setup controls\n    const myControls = new OrbitControls(myCamera, myRenderer.domElement);\n    myControls.enableDamping = true;\n    myControls.dampingFactor = 0.25;\n    myControls.screenSpacePanning = false;\n    myControls.minDistance = 150;\n    myControls.maxDistance = 500;\n\n    // üöÄ Start animation loop\n    (function animate() {\n      myControls.update();\n      myRenderer.render(myScene, myCamera);\n      requestAnimationFrame(animate);\n    })();\n\n    // üåê Append the renderer's canvas to the ref\n    globeEl.current.appendChild(myRenderer.domElement);\n\n    // üßπ Cleanup on component unmount\n    return () => {\n      myRenderer.domElement.remove();\n      myRenderer.dispose();\n      myControls.dispose();\n    };\n  }, [logs]);\n\n  return <div ref={globeEl} />;\n}\n\n// üåç Helper: Approximate coordinates for countries\nfunction getApproximateCoords(country, city) {\n  const coords = {\n    Nigeria: { lat: 9.082, lng: 8.6753 },\n    \"United States\": { lat: 37.0902, lng: -95.7129 },\n    \"United Kingdom\": { lat: 55.3781, lng: -3.436 },\n    Germany: { lat: 51.1657, lng: 10.4515 },\n    France: { lat: 46.2276, lng: 2.2137 },\n    Japan: { lat: 36.2048, lng: 138.2529 },\n    Australia: { lat: -25.2744, lng: 133.7751 },\n    Canada: { lat: 56.1304, lng: -106.3468 },\n    Brazil: { lat: -14.235, lng: -51.9253 },\n    India: { lat: 20.5937, lng: 78.9629 },\n    China: { lat: 35.8617, lng: 104.1954 },\n    Russia: { lat: 61.524, lng: 105.3188 },\n    \"South Africa\": { lat: -30.5595, lng: 22.9375 },\n    Mexico: { lat: 23.6345, lng: -102.5528 },\n    Argentina: { lat: -38.4161, lng: -63.6167 },\n  };\n\n  return (\n    coords[country] || {\n      lat: Math.random() * 180 - 90,\n      lng: Math.random() * 360 - 180,\n    }\n  );\n}\n\nexport default GlobeComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}